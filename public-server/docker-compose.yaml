version: '3.8'

services:
  mysql-db:
    image: mysql:5.7
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: airlux
      MYSQL_USER: airlux
      MYSQL_PASSWORD: airlux
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - public_server
  timeseries-db:
    image: influxdb:2.1
    container_name: timeseries-db
    ports:
      - 8086:8086
    volumes:
      - timeseries_data:/var/lib/influxdb2
      - timeseries_config:/etc/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_ORG: docs
      DOCKER_INFLUXDB_INIT_BUCKET: home
      DOCKER_INFLUXDB_INIT_USERNAME: airlux
      DOCKER_INFLUXDB_INIT_PASSWORD: airluxpassword
    networks:
      - public_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.timeseries-db.rule=Host(`timeseries-db.localhost`)"
      - "traefik.http.routers.timeseries-db.entrypoints=web"
  reverse-proxy:
    image: "traefik:v3.2"
    container_name: "reverse-proxy"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8082:8080"
    volumes:
      - reverse-proxy_data:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - public_server
  airnet-api:
    image: python:3.13
    container_name: airnet-api
    ports:
      - 8000:8000
    volumes:
      - ./airnet-api/:/app
    networks:
      - public_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.airnet-api.rule=Host(`airnet-api.localhost`)"
      - "traefik.http.routers.airnet-api.entrypoints=web"
    entrypoint: ["sh", "-c", "pip install -r /app/requirements.txt && fastapi run /app/app/main.py --host 0.0.0.0 --port 8000"]
  airnet-private-server:
    image: python:3.13
    container_name: airnet-private-server
    ports:
      - 8001:8000
    volumes:
      - ./airnet-api/:/app
    networks:
      - public_server
    entrypoint: ["sh", "-c", "pip install -r /app/requirements.txt && fastapi run /app/app/main.py --host 0.0.0.0 --port 8000"]
  
volumes:
  airnet-private-server_data:
    driver: local
  reverse-proxy_data:
    driver: local
  mysql_data:
    driver: local
  timeseries_data:
    driver: local
  timeseries_config:
    driver: local



networks:
  public_server:
    driver: bridge
  
